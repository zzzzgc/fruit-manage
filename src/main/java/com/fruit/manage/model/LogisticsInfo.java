package com.fruit.manage.model;

import com.fruit.manage.model.base.BaseLogisticsInfo;
import com.jfinal.plugin.activerecord.Db;
import sun.rmi.runtime.Log;

import java.math.BigDecimal;
import java.util.Date;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class LogisticsInfo extends BaseLogisticsInfo<LogisticsInfo> {
    public static final LogisticsInfo dao = new LogisticsInfo().dao();

    /**
     * 根据订单ID删除物流信息表
     *
     * @param orderID
     * @return
     */
    public boolean delLogisticsInfoByOrderID(String orderID) {
        String sql = "DELETE from b_logistics_info where order_id=?";
        if (Db.update(sql, orderID) > 0) {
            return true;
        }
        return false;
    }

    /**
     * 根据订单编号获取物流信息表的ID、发送总价、订单号
     *
     * @param orderId
     * @return
     */
    public LogisticsInfo getLogisticeInfoByOrderID(String orderId) {
        String sql = "select li.id,li.send_goods_total_cost,li.order_id from b_logistics_info li " +
                "where li.order_id=?";
        return findFirst(sql, orderId);
    }

    /**
     * 根据订单编号获取物流信息表的所有字段的信息
     *
     * @param orderId 订单编号
     * @return 返回物流表的所有信息
     */
    public LogisticsInfo getLogisticsDetailInfoByOrderID(String orderId) {
        String sql = "SELECT * from b_logistics_info where order_id = ? ";
        return findFirst(sql, orderId);
    }

    /**
     * 根据订单号获取实际发货数量
     *
     * @param orderId
     * @return
     */
    public Integer getActualSendGoodsNum(String orderId) {
        String sql = "SELECT sum(actual_send_goods_num) as actual_send_goods_num from b_order_detail where order_id = ? ";
        return Db.queryInt(sql, orderId);
    }

    /**
     * 添加物流信息
     */
    public LogisticsInfo addLogisticsInfo( Integer bUserId,String order_id) {
        BusinessInfo UserInfo = BusinessInfo.dao.getBusinessInfoByUId(bUserId);
        LogisticsInfo logisticsInfo = new LogisticsInfo();
        logisticsInfo.setUId(bUserId);
        logisticsInfo.setOrderId(order_id);
        logisticsInfo.setBuyPhone(UserInfo.getPhone());
        logisticsInfo.setBuyAddress(UserInfo.getAddressProvince() + UserInfo.getAddressCity() + UserInfo.getAddressDetail());
        logisticsInfo.setBuyUserName(UserInfo.getBusinessName());
        logisticsInfo.setDeliveryType(UserInfo.getShipmentsType());
        logisticsInfo.setCreateTime(new Date());
        logisticsInfo.setUpdateTime(new Date());
        logisticsInfo.save();
        return logisticsInfo;

//		logisticsInfo.setFreightCost(freight_cost);
//		logisticsInfo.setEmbarkationCost(embarkation_cost);
//		logisticsInfo.setTransshipmentCost(transshipment_cost);
//		logisticsInfo.setTricycleCost(tricycle_cost);
//		logisticsInfo.setPackageCost(package_cost);
//		logisticsInfo.setPackageNum(package_num);
//		logisticsInfo.setAbstract(abstract);
//		logisticsInfo.setDeliveryInfo(delivery_info);
//		logisticsInfo.setLicensePlateNumber(license_plate_number);
//		logisticsInfo.setSendGoodsTotalCost(send_goods_total_cost);
//		logisticsInfo.setRealityTakeNum(reality_take_num);
//		logisticsInfo.setRealitySendNum(reality_send_num);

//		logisticsInfo.setSendGoodsTime(send_goods_time);
//		logisticsInfo.setTakeGoodsTime(take_goods_time);

    }
}
